name: Build and Deploy CTFd instance

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Use just the repo name, not org/repo
    - name: Set repo name lowercase
      id: repo
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ github.event.repository.name }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Harbor
      uses: docker/login-action@v3
      with:
        registry: harbor.psuccso.org
        username: robot$ctfd
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Generate Tag Names
      run: |
        repo="${{ steps.repo.outputs.lowercase }}"  # now only 'ctfd-sso'
        short_sha=$(git rev-parse --short HEAD)
        echo "TAG_LATEST=$repo:latest" >> $GITHUB_ENV
        echo "TAG_COMMIT=$repo:$short_sha" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        file: ./Dockerfile
        push: true
        tags: |
          harbor.psuccso.org/ctfd-sso/${{ env.TAG_LATEST }}
          harbor.psuccso.org/ctfd-sso/${{ env.TAG_COMMIT }}
        cache-from: type=registry,ref=registry.psuccso.org/ctfd-sso/${{ env.TAG_LATEST_CMS }}
        cache-to: type=inline

  deploy-rancher:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Redeploy CTFd in Rancher
        run: |
          url='https://rancher.psuccso.org'
          cluster=local
          token=${{ secrets.RANCHER_TOKEN }}
          namespace="ctfd"   # Rancher namespace for CTFd
          app="ctfd"         # Deployment name for CTFd

          redeploy() {
              curl -u "$token" -k -s \
                -X PATCH \
                -H "Content-Type: application/merge-patch+json" \
                "$url/v1/projects/p-qm57p/workloads/deployment:$namespace:$app" \
                --data "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"redeployTimestamp\":\"$(date -u +%Y-%m-%dT%H:%M:%SZ)\"}}}}}"
          }

          redeploy


